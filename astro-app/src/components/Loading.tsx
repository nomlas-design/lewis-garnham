import { useEffect, useRef, useState } from 'react';
import { gsap } from 'gsap';

const ROTATION_ANGLE = 20;

type SprayStroke = {
  x: number;
  y: number;
  width: number;
  height: number;
  direction: 'top' | 'bottom';
  cornerRadius: number;
};

const Loading = () => {
  const [isComplete, setIsComplete] = useState(false);
  const loadingRef = useRef<HTMLDivElement>(null);
  const logoRef = useRef<HTMLDivElement>(null);
  const svgRef = useRef<SVGSVGElement>(null);
  const timelineRef = useRef<gsap.core.Timeline | null>(null);
  const previousOverflowRef = useRef<{ body: string; html: string } | null>(
    null
  );

  const lockScroll = () => {
    if (typeof window === 'undefined') return;

    if (!previousOverflowRef.current) {
      previousOverflowRef.current = {
        body: document.body.style.overflow,
        html: document.documentElement.style.overflow,
      };
    }

    document.body.style.overflow = 'hidden';
    document.documentElement.style.overflow = 'hidden';
  };

  const restoreScroll = () => {
    if (typeof window === 'undefined') return;

    if (!previousOverflowRef.current) return;

    const { body, html } = previousOverflowRef.current;
    document.body.style.overflow = body;
    document.documentElement.style.overflow = html;
    previousOverflowRef.current = null;
  };

  const createSprayStrokes = (
    width: number,
    height: number,
    count: number
  ): SprayStroke[] => {
    const strokes: SprayStroke[] = [];
    const verticalPadding = height * 0.25;
    const paddedHeight = height + verticalPadding * 2;
    const rotationRadians = (Math.PI / 180) * ROTATION_ANGLE;
    const horizontalPadding = Math.abs(
      Math.tan(rotationRadians) * verticalPadding
    );
    const baseWidth = width / count;

    for (let i = 0; i < count; i++) {
      const strokeWidth = baseWidth + horizontalPadding + 2;
      const x = baseWidth * i - horizontalPadding / 2;
      const cornerRadius = Math.min(strokeWidth * 0.45, paddedHeight * 0.1);

      strokes.push({
        x,
        y: -verticalPadding,
        width: strokeWidth,
        height: paddedHeight,
        direction: i % 2 === 0 ? 'top' : 'bottom',
        cornerRadius,
      });
    }

    return strokes;
  };

  const animateSprayEffect = (): gsap.core.Timeline | undefined => {
    if (!svgRef.current || !logoRef.current || !loadingRef.current) return;

    const svgRect = svgRef.current.getBoundingClientRect();
    const viewBox = svgRef.current.viewBox.baseVal;
    const baseWidth = viewBox?.width || svgRect.width || 995;
    const baseHeight = viewBox?.height || svgRect.height || 510;
    const strokeCount = 25;

    const bgStrokes = createSprayStrokes(baseWidth, baseHeight, strokeCount);
    const bgMask = svgRef.current.querySelector<SVGElement>('#bgMask');
    const fgGroup = svgRef.current.querySelector<SVGGElement>('#Layer_4_fg');

    if (!bgMask || !fgGroup) return;

    gsap.set(logoRef.current, {
      transformOrigin: '50% 50%',
      scale: 1,
      opacity: 1,
    });
    gsap.set(loadingRef.current, { opacity: 1 });
    gsap.set(fgGroup, { opacity: 0 });

    bgMask.innerHTML = '';

    const bgRects: SVGRectElement[] = [];

    bgStrokes.forEach((stroke: SprayStroke) => {
      const rect = document.createElementNS(
        'http://www.w3.org/2000/svg',
        'rect'
      );
      rect.setAttribute('x', stroke.x.toString());
      rect.setAttribute('y', stroke.y.toString());
      rect.setAttribute('width', stroke.width.toString());
      rect.setAttribute('height', stroke.height.toString());
      rect.setAttribute('fill', 'white');
      rect.setAttribute('rx', stroke.cornerRadius.toString());
      rect.setAttribute('ry', stroke.cornerRadius.toString());
      rect.dataset.direction = stroke.direction;
      rect.style.transformOrigin =
        stroke.direction === 'top' ? 'center top' : 'center bottom';
      bgMask.appendChild(rect);
      bgRects.push(rect);
    });

    bgRects.forEach((rect: SVGRectElement) => {
      const origin =
        rect.dataset.direction === 'top' ? 'center top' : 'center bottom';
      gsap.set(rect, {
        scaleX: 1,
        scaleY: 0,
        rotation: ROTATION_ANGLE,
        transformOrigin: origin,
      });
    });

    const randomBetween = (min: number, max: number) =>
      Math.random() * (max - min) + min;

    const tl = gsap.timeline({
      onComplete: () => {
        setIsComplete(true);
      },
    });

    const randomizedBg = gsap.utils.shuffle<{
      rect: SVGRectElement;
      stroke: SprayStroke;
    }>(bgRects.map((rect, i) => ({ rect, stroke: bgStrokes[i] })));

    randomizedBg.forEach(({ rect }: { rect: SVGRectElement }) => {
      tl.to(
        rect,
        {
          scaleY: 1,
          duration: randomBetween(0.5, 1.9),
          ease: 'power2.out',
        },
        randomBetween(0, 0.4)
      );
    });

    tl.to(fgGroup, { opacity: 1, duration: 0.8, ease: 'power2.out' }, '-=0.6');

    tl.to(
      logoRef.current,
      {
        scale: 1.1,
        duration: 0.8,
        ease: 'ease1.out',
      },
      '-=0.1'
    );

    tl.to(
      logoRef.current,
      {
        opacity: 0,
        duration: 0.8,
        ease: 'power1.out',
      },
      '-=0.8'
    );

    tl.to(
      loadingRef.current,
      {
        opacity: 0,
        duration: 1,
        ease: 'power2.inOut',
        onStart: restoreScroll,
      },
      '-=0.1'
    );

    return tl;
  };

  useEffect(() => {
    if (typeof window === 'undefined') return;

    lockScroll();

    const timer = window.setTimeout(() => {
      const tl = animateSprayEffect();
      timelineRef.current = tl ?? null;
    }, 500);

    return () => {
      window.clearTimeout(timer);

      if (timelineRef.current) {
        timelineRef.current.kill();
        timelineRef.current = null;
      }

      restoreScroll();
    };
  }, []);

  if (isComplete) {
    return null;
  }

  return (
    <div className='loading' ref={loadingRef}>
      <div className='loading__logo' ref={logoRef}>
        <svg
          ref={svgRef}
          xmlns='http://www.w3.org/2000/svg'
          version='1.1'
          viewBox='0 0 994.8 510.4'
          className='loading__logo-svg'
        >
          <defs>
            <mask
              id='bgMask'
              maskUnits='userSpaceOnUse'
              maskContentUnits='userSpaceOnUse'
              x='0'
              y='0'
              width='994.8'
              height='510.4'
            ></mask>
            <style>
              {`
                .logo-bg {
                  fill: #232916;
                }
                .logo-fg {
                  fill: #ebe0af;
                }
              `}
            </style>
          </defs>
          <g>
            <g id='Layer_4_bg' mask='url(#bgMask)'>
              <path
                className='logo-bg'
                d='M876.6,469.8c3.5,6.1,6.5,12.7,10.7,18.4,10.1,13.5,24,20.2,40.8,21.1,14.1.8,27.3-1.9,39.2-9.8,14.9-10,22.8-24.4,25.9-41.7,2.4-13.3,1-26.6-.8-39.8-2.7-20.6-5.9-41.1-7.8-61.7-1.3-14.2-.6-28.5-.9-42.8-.3-10.7-.7-21.5-3.3-32-4.9-19.9-15.5-35.6-34.7-43.8-21.7-9.3-42.5-6.7-61.6,7.4-2.9,2.1-5.2,2.4-8.6,1-10-4.2-20.1-7.8-30.4-11.7.7-.9,1.6-2.3,2.6-3.6,10.5-15.1,14.5-32,14.4-50.1,0-10.1-.9-20-4.5-29.5-2.9-7.8-6.8-15-13.4-20.4-3.5-2.9-3.7-5.1-.9-7.6,8.4-7.4,12.3-17.3,14.7-27.7,4.7-20.5-1.1-38.9-12.3-55.9-11.3-17-27.7-27.1-47.3-31.6-24.2-5.6-48.1-5.3-71.6,3.9-8.7,3.4-16.6,8.2-23.9,14-1.6,1.3-2.9,1.8-4.5,0-17.3-19.3-38.5-21.6-61.9-13.6-2.3.8-4.5,1.6-6.8,2.4-2.9,1-5.7.5-8.2-1.2-.6-.4-1.2-.8-1.8-1.3-13.8-12.7-29.6-14.2-46.9-8.7-18.6,5.9-31.3,18.1-38.5,36.2-.1.3-.2.5-.3.8-2,5.1-2,5.1-6.2,1.7-9.9-7.8-20.7-7.5-31.7-3.1-1.7.7-3.3,1.6-5,2.5-2,1.1-3.2,1-3.8-1.6-.7-3.3-1.5-6.7-2.7-9.9-6.6-17.4-19.4-27-37.8-29.3-7.2-.9-14.4-.6-21.5,1-8.1,1.8-14.8,5.9-19.9,12.4-1.8,2.2-3.3,2.4-5.6.9-17.4-11-36.6-14.1-56.6-11.6-35.8,4.4-58.2,25.8-70.1,58.6-4.8,13.3-7.4,27.4-10.8,41.3-2.4,10-4.5,20-6.8,30-1.1,4.6-3,8.8-6.5,12-1.7,1.6-3.4,3-5.9,1.9-2.5-1-3.9-3-3.8-5.6.2-5.5.4-11.1,1.1-16.6,2.3-18.8,5.5-37.5,5.8-56.6.1-11.6-.7-23.2-5.1-34.1-7.1-17.7-20.8-26.7-39.5-27.4-31.6-1.1-55.4,16.8-64.9,48.1-3.8,12.6-4.7,25.5-4.5,38.5.3,16.3.9,32.6,1.2,48.9.4,15.8-1.2,31.4-3.7,47-1.8,10.9-3.1,21.8-2.5,32.9.2,2.9.8,5.9,1,8.8.2,2.7-.7,3.5-3.3,3.4-37.2-.6-66.9,14.5-90.1,43-18.2,22.3-28.2,48.2-32.2,76.6-2.9,20.7-3.4,41.6-1.5,62.4,1.9,22,7.4,43.1,21.5,60.7,21,26.1,48.5,36.8,81.7,31.8,7.6-1.1,15-4,22.4-6.2,2-.6,3.7-.7,5.5.5,9,6.4,19,7.5,29.1,4.2,8.1-2.7,15.6-2.9,23.9-.5,13.1,3.8,25.7,1.1,37.5-5.3,6.8-3.7,13.1-4.4,20.2-.3,9.1,5.2,19.4,6,29.7,5,7.6-.7,15.1-1.8,22.6-2.7,6.4-.8,12.8-.6,18.9,1.7,13.7,5.1,26.9,3.5,39.9-2.4,2.8-1.3,5.5-2.7,8.2-4.2,2.8-1.5,5.5-1.5,8.2.1,12.6,7.7,26,8.3,39.9,4.6,3.5-.9,7.2-1.5,10.9-1.8,1.7-.1,3.8.4,5.3,1.3,7.7,4.8,16.1,5.1,24.7,4.4,7.5-.5,14.4-3.2,21.1-6.5,2.7-1.3,5.7-2.1,8.6-2.6,1.5-.2,3.4.3,4.7,1.2,6.2,4.4,13.5,5.4,20.7,6.4,12.3,1.7,24.4-.2,36.4-2.2,2.7-.5,5.9-.1,8.3,1,17.6,7.8,35.1,7.1,52.6,0,3.6-1.4,7-3.3,10.5-5.1,1.8-1,3.4-1.2,5.2,0,12,8.6,25.4,10,39.5,8.1,6.4-.9,12.7-2.5,19.2-3.1,4-.4,8.3-.2,12,1.1,6.4,2.2,12.7,2,19.2,1,9.4-1.4,17.6-5.6,24.9-11.6,3.5-2.8,4.4-2.8,7.9.1,13.1,11.3,28.5,14,45,11.4,5-.8,9.9-2.2,14.9-3.1,1.7-.3,3.8-.4,5.3.4,21.6,10.2,49.1.6,62.4-21.7,2.5-4.3,4.9-8.6,7-12.5Z'
              />
            </g>
            <g id='Layer_4_fg' opacity='0'>
              <path
                className='logo-fg'
                d='M527.3,126c0,6.6,0,18.8,0,31,0,2,.6,3.9.9,5.9.7,4.8,3.2,7.5,8.2,7.6,4.2,0,7.7-2.8,8.7-7.4,1.3-5.6.7-11.3.7-16.9,0-27.1-.3-54.2,5.3-81,2.4-11.3,6.4-22,15-30.2,10.3-9.7,33.2-11.9,42.2,4.2,3.4,6.2,5,13,5.7,19.9,1.9,18.6,1.8,37.2.3,55.8-2.4,29.5-8.5,58.3-17.2,86.5-3.5,11.3-8.4,22-17.7,30-11.8,10.1-26,11.2-40.4,9.4-17.3-2.2-25.2-11.3-28.8-31.2-3.4-18.6-3.6-37.4-3.8-56.2,0-2.5-.1-5-.3-7.5,0-1.2-.6-2.3-2-2.5-1.5-.2-2.2.9-2.5,2-.9,4.2-1.8,8.4-2.4,12.7-2.5,17.7-3.4,35.6-7.9,53.1-1.2,4.5-2.7,8.9-4.6,13.1-5.8,12.6-15.9,18.8-29.6,19-5.8.1-11.6.6-17.4-.9-6.3-1.6-10.2-6.2-10.5-12.7-.5-13.7,2.6-27.1,2.2-40.9-.3-10.6-1.6-20.8-6.2-30.4-2.9-6.1-7.3-11.1-13.5-14.1-1.8-.9-3-1.6-1.3-3.9,16.7-22.4,17.4-47.6,12.2-73.7-1.6-8.1-4.4-15.9-6.4-23.9-1.6-6.5.2-10.6,6.3-13.3,9.8-4.4,20-4.6,29.9-.3,9.2,4,11.9,12.5,12.8,21.5,1.7,17.7-.5,35.2-1.6,52.8-.4,6.3-.4,12.6-.9,19-.9,12.1-1.2,24.3-1.3,36.4,0,6.8,2.8,10.8,7.3,11.6,5.4.9,9.1-1.1,10.4-6.8,1.2-5.1,1.9-10.5,2.1-15.8.7-18.3,1.3-36.6,3.1-54.8.4-4.5,1.6-8.8,2.6-13.1,3.5-14.8,18.7-18.6,29.9-15,7.7,2.5,11.3,8.5,11.4,19.5.2,12,.3,24-.9,41.5h0ZM961.1,334.5c-1.4,27,4.2,53.2,8.6,79.5,2.5,15.3,5.9,30.8,1.7,46.4-3.3,12.3-11.4,19.6-23.5,22.5-8.3,2-16.8,1.8-25.2-.7-11.7-3.5-18.8-13.3-19.7-26-1-15.4,1.9-30.4,4.5-45.5,2.7-15.7,4.4-31.6,3.5-47.6,0-1.3-.5-2.6-.8-3.9-.3-1.6-1-3-2.7-3.2-1.8-.1-2.9,1.1-3.7,2.8-2.6,5.4-2.8,11.2-3.7,16.9-2.7,16.9-5.1,33.8-13.1,49.2-2.4,4.7-5.8,8.6-11.9,8.6-6.2,0-10.2-3.3-13.1-8.5-.8-1.4-1.5-3-2.1-4.5-5.3-13-7.3-26.8-8.9-40.6-.7-6.3-1.3-12.5-2.2-18.8-.3-2.2-1.1-5.2-3.8-5.2-2.5,0-3.5,2.7-4,5.1-2.1,9.4-1.3,18.9-.5,28.3,1.6,18.9,6.8,37.2,9.1,55.9,1,7.9,1.7,15.9-1.4,23.6-4.1,10.3-15.3,16.1-25.9,13.3-4.3-1.2-6.4-3.8-6.4-8.2,0-4,0-8,.1-12,.9-28-4-55.2-9.5-82.4-4.5-22.6-7-45.4-5.4-68.4.9-13.3,4.2-26.2,13-36.9,8.2-10.1,27.8-14.4,39.3-8.4,7.1,3.7,10.1,10.1,11.5,17.6,2.4,12.7,1.5,25.5,1.3,38.3,0,7.5.2,15,1.6,22.3.5,2.5,1.1,5.9,3.6,6,2.7.1,3.3-3.4,3.8-5.8,2.3-10.8,4.4-21.7,6.7-32.6,2.3-10.5,4.7-21,8.9-30.9,6.2-14.5,15.4-23.2,32.6-22.4,14.5.7,26,9.2,31.6,24,4.1,10.9,5.2,22.2,5.7,33.7.3,6.1,0,12.3,0,18.5h0ZM21.2,391.2c.2-34.5,8.2-66.7,28.5-95,12.5-17.5,28.1-30.9,50-35.3,11.8-2.4,23.8-2.7,35.6.1,27.1,6.5,35,31.6,29.8,54.1-4.4,19.1-23.5,23.3-36.5,22-7.4-.8-12.8-4.4-17.3-10.5-6.8-9.2-18.2-8.9-23.8,1.1-8.7,15.5-14.3,32.3-17.2,50-1.8,10.6-1.7,21.2,1.2,31.6,2.2,8.1,6.6,14.6,15.8,15.9,8.5,1.2,20.4-4.7,24.3-11.9,1.7-3.2,2.8-6.6.9-10-1.9-3.4-5.3-2.5-8.5-2.2-13,1.3-19.1-5.4-16.8-18.2,2-11.1,8.8-18,19.1-21.5,12.6-4.3,25.5-4.5,38.3-1.5,13.5,3.1,20.8,12.8,24.7,25.5,2.9,9.4,3.9,19.2,4.5,28.9,1.2,17.3,1,34.6-3.8,51.5-3.2,11.4-10.8,15.6-20.9,12.6-5.2-1.5-7.3-5.4-8.7-10-.6-1.9-.8-3.9-1.1-5.9-.3-1.9-.7-3.9-2.7-4.3-2.2-.4-3.1,1.7-3.9,3.3-5.7,11.4-15.2,18.4-27.2,21.8-22.8,6.4-42.6.6-59.2-16.2-13.2-13.4-19.7-30-23-48.1-1.7-9.2-2.5-18.5-2.1-27.8h0ZM558.3,395.9c0,19.1-.3,38.3-5.2,56.9-2.6,10.2-6.7,20.2-17.4,24-15.9,5.7-34.2,4-44.5-14.2-6.1-10.8-9.1-22.7-12-34.6-5.1-21.5-7.3-43.4-12.1-64.9-.6-2.5-.3-6.8-3.8-6.5-3.1.3-2.8,4.6-2.9,7.2-.7,10.8,0,21.6,1.3,32.4,2.5,20.1,5,40.2,7.4,60.3.4,3.3.3,6.7,0,10-.9,10.5-12.4,17.1-22.1,12.9-3.2-1.4-5-3.5-4.8-7.2.3-8.8,1.7-17.5,1.3-26.4-.6-13.4-4.6-25.7-13.4-35.6-11.7-13.2-14.4-26.1-6.3-42.6,7.9-16.2,8.7-34.2,8.1-52.1-.4-11-1.9-21.9-1.6-32.9.3-10.6,5.1-15.6,15.4-17.2,27.9-4.3,40.8,10.3,45.5,32.9,3.9,19,5.8,38.3,7.2,57.7.6,8.4,1.7,16.9,2.7,25.2.2,1.7.1,4,2.7,4.1,2.2,0,3-1.9,3.8-3.5,2.2-4.8,2.9-9.9,2.6-15.1-1-21.4-2.4-42.9-3.5-64.3-.5-8.5-1.2-16.9-.4-25.4.9-9.1,6.1-14.1,15.2-14.6,16.2-.8,25.4,6.7,28.9,23.2,2.7,12.5,3.8,25.3,4.7,38,1.6,24.1,3.3,48.1,3.3,72.3h0ZM707.3,192.9c.5-9.2-.2-18,1.7-26.7,1.6-7.2,5.6-10,13-9.2,11.6,1.3,21,6.1,26.1,17.2,3,6.5,7.3,11.5,14.6,13.1,11.9,2.8,20.3-5.4,18.2-17.5-1.9-10.5-8.4-17.1-17.7-21.2-10.3-4.6-21.4-6.8-32.2-10-24.3-7.3-32.9-17.5-33.4-42.9-.7-34.1,17.5-58.4,52.3-65.4,20.4-4.1,39.9-2.3,58.2,8.2,19.4,11.2,29.2,32.8,25.3,53.6-3.7,20.3-20.7,23.3-35.7,18.9-6.8-2-11.2-6.8-13.6-13.5-.7-1.9-1.2-3.8-2-5.6-4.1-8.8-12.8-12.9-20.8-9.9-7.1,2.6-10.7,11.1-8.7,20.1,2.6,11.5,11,17.2,21,21.4,10.1,4.2,20.9,6.3,31.1,10.1,22,8.2,33.1,24.4,33.5,47.9.2,12.1-1.4,23.8-7.5,34.6-8.7,15.6-23.3,23.1-39.9,26.1-21.6,3.8-43.4,3-65-.7-11.1-1.9-15.5-7.4-16.8-18.5-1.2-10.1-.7-20.3-1.8-30h0ZM355.2,262.4c9.1-.3,19.1,0,28.8,2.5,18.5,4.9,29.6,17.2,34.4,35.6,3.6,13.8,3.8,27.6.7,41.5-3.1,14.2-10.9,25-24.2,31.7-7.1,3.6-8.1,7.9-3.4,14.4,4.5,6.2,10.4,11.2,16,16.4,10.4,9.5,20,19.4,23.2,33.9,3.3,14.8-1.6,28.6-12.8,34.9-13.6,7.6-30.7,6-40.1-4-6.6-7-8.5-16.3-10.5-25.4-2.6-11.3-3.7-22.9-7.1-34-.9-3.1-2.4-6.2-3.6-9.2-.8-1.8-2.2-3-4.2-2.7-1.8.3-2.6,1.9-3.1,3.6-1.7,5.7-1.3,11.6-.7,17.4,1.2,12.6,2.9,25.1,4.5,37.6,2.6,20.5-14.4,33.6-33.9,26.1-3.4-1.3-5.2-3.3-5-7,.5-8.1.8-16.3,1.4-24.4,1.4-16.9.1-33.6-1.8-50.3-2.3-20-5.4-39.8-6.7-59.9-.9-13-1.3-25.9-.8-38.9.3-6.3.9-12.6,2.8-18.6,3.9-12.6,11.3-18.5,24.2-20.1,7-.9,13.9-1,21.9-1h0ZM345.2,336.8c.1,5.5-.5,10.9,1,16.4,1.1,4.3,2.7,7.9,7.9,8.1,5.4.2,9.9-2.9,11-8.1,1.2-5.6,2.5-11.4,2.9-17.1.4-6.9,1.2-14-.9-20.8-1.6-5.1-5.8-8.1-10.8-7.9-5.3.2-7.8,3.5-9.2,8.2-2,7-1.9,14.1-2,21.2h0ZM608.2,300.9c-1.3,15.8-2.1,31.5-3.8,47.3-1,8.8,3.8,14.1,12,14.3,9.4.2,14.2-4.2,13.7-13.5-.7-13-2.2-25.9-2.2-38.9,0-9.6-.1-19.3,2.3-28.7,2.7-10.8,9.8-16.8,19.8-16.9,13.7-.1,20.9,4.9,24.4,16.5,3.4,11.5,3.3,23.4,3.6,35.1.8,28,2.7,55.9,4.5,83.7,1.1,17.4,3.1,34.8,2.8,52.3,0,3.7-.7,7.3-1.5,10.8-2.3,9.8-8.8,15.2-18.4,17.4-7.9,1.8-15.9,1.6-23.8,0-9.5-2.1-13.8-8.4-14.5-19.9-.7-13,1.6-25.9,2.5-38.8.1-2.1.5-4.3.6-6.5.2-11.1-3.2-15-12.7-14.5-9.1.5-13.6,5.1-13,16.2.7,13,1.8,25.9,1.8,38.9,0,3.5-.3,6.9-.9,10.4-1.5,8.1-6.7,12.8-13.8,15.5-7.9,3-16,2.5-24,.5-4.1-1-5.9-5.2-5-10.7,1.3-7.3,2.9-14.6,3.9-22,1.2-8.2,2.1-16.5,2.7-24.7,2.7-41.1,1.9-82.2,1.1-123.3-.1-6.5-.2-13,0-19.5.7-13.6,6.2-18.6,20.7-17.8,10.9.6,16.7,7.5,17.2,19.3.2,5.8,0,11.6,0,17.5h0ZM218.6,442.7c.2,8.1.8,16.3-1.2,24.3-3,12.1-17.4,18.7-28.9,13.6-3.2-1.4-4.4-3.8-4.2-7.1.8-10.6,1.5-21.2,2.4-31.8,1.4-16.9.6-33.7-1.9-50.3-3.4-22.8-3-45.3,1.9-67.8,2.5-11.1,4.4-22.4,7.6-33.4,5.1-17.9,13.5-30.5,37.8-31.6,6.5-.3,13,.1,19.4,1,14.1,2,22.2,11.2,26.8,23.8,5.7,15.6,8.2,32,11,48.3,3.7,21.2,7.2,42.5,10.5,63.7,3,19.3,5.4,38.6,2.6,58.1-2.8,19.8-10.7,24.6-29.9,26.6-4.1.4-8.3,0-12.4-.8-9.5-1.9-14.4-7.9-14.8-17.7-.5-12.7,2.1-25.2,2.1-37.9,0-10.2-2.6-13-12.8-13.4-1.5,0-3,0-4.5,0-9,.4-12.6,4.3-12.3,13.2.2,6.3.6,12.6.9,19h0ZM221.4,361.5c0,2.2-.3,4.4,0,6.5.8,4.7,1.6,9.5,7.1,11.6,10.1,3.8,18.8-1.9,18.7-12.7,0-11.3-1.4-22.5-2.9-33.7-.9-6.7-4.2-10.2-9.4-10.4-5-.2-9.5,3.9-10.4,10.1-1.5,9.5-2.8,19-3.1,28.6h0ZM357.3,243.3c-9.9.1-18.7-.6-27.4-1.9-14.1-2.1-20.8-10.7-21.7-26.5-.7-13.7-1.6-27.5-6.8-40.5-2.9-7.3-7.2-13.4-13.5-18.1-4.1-3-6-6.4-5.8-11.7,1.3-31.5,6.7-61.9,23.1-89.4,14.4-24.1,40.5-34.4,67.4-26.5,14,4.1,23,14.4,28.6,27.3,8.7,20.1,9.6,40.8,3,61.7-5.1,16.2-21.9,29-38.8,30.9-9.8,1.1-19.2-.2-28.6-2.3-6.7-1.5-12.1,2.2-12.4,9-.5,10.5,3.7,19,13,24.1,8.6,4.8,17.5,4.4,25.8-1.5,3.9-2.8,7.7-5.8,11.7-8.5,7.8-5.4,16.6-6.6,25.7-4.7,5.8,1.2,10.1,4.6,12.5,10.3,6,14.8,2.6,42.7-10.6,55-8.3,7.7-18.5,10.7-29.2,12.4-5.6.9-11.2,1.2-15.8.9h0ZM364.2,100.5c.3-5.5.1-10.9-2.8-15.9-5-8.5-17.7-8.6-22,.2-5.2,10.7-5.8,22.1-2,33.3,2.2,6.6,6.1,8.6,13,8.3,5.7-.3,10.1-3.8,11.9-9.6,1.6-5.3,2.3-10.7,2-16.3h0ZM157.2,124.3c-.3-23.3-.9-39.5,2.1-55.5,1.9-9.9,5.3-19,13.2-26.1,11.1-9.9,32.5-9.8,42,.4,3.1,3.3,4.8,7.2,5.8,11.4,2.8,11.4,1.6,22.8.6,34.2-2.2,25.1-7.3,49.8-11.4,74.7-.9,5.5-1.6,11.8,4,15.5,5.6,3.6,10.9.2,15.9-2.4,7.4-3.8,14.6-7.7,22.8-9.4,20.3-4.3,36.1,7.2,38,28,.7,8,.9,15.9-1.8,23.6-4.2,12.1-13.5,17.4-25.3,18.6-29.7,2.9-59.5,3.5-89.3,2.9-4.1,0-8.3-.4-12.3-1.6-8.3-2.5-11.9-7.2-12.3-15.9-.4-10.2,1.3-20.2,3.2-30.1,4.8-25,5.2-50.2,4.8-68.3h0ZM694.2,363.9c0-21.8-.3-43.6,2.8-65.3,1.1-7.3,3-14.2,6.3-20.8,5.6-11.2,15.9-14.5,27.2-15.3,22-1.5,32.4,5.5,39.8,26.4,6.3,17.7,9.2,36.2,13.5,54.4,5,20.8,9.5,41.6,13.7,62.5,3.3,16.6,5.9,33.4,5.6,50.4-.3,16-8.5,24.1-24.5,24.2-3.6,0-7.3.5-10.9-.6-10.5-3-16-11.4-16.6-25.5-.3-7.8-.3-15.7-1-23.4-.7-7.9-4.8-10.9-13.3-10.5-7.4.4-11.4,4.7-11.7,12.1-.5,11,1.2,21.9.3,32.9-1.1,13.5-11.4,15.8-20.4,14.7-4.6-.6-6.7-4-6.7-8.5-.1-14-1.1-27.9-2.1-41.9-.8-11-1.6-21.9-1.9-32.9s0-22,0-33h0ZM751.3,377.9c-.9-9.6-1.8-20.5-2.9-31.5-.5-4.6-.7-9.3-3-13.5-2.6-4.6-7.3-5-10.4-.8-1.2,1.6-2.3,3.5-2.5,5.3-2,16-5.2,31.8-5.3,47.9,0,6.7,3.4,11.4,9.1,11.7,5.2.3,12-1.3,14.1-8.5,1-3.2.4-6.3.9-10.7h0ZM692.2,187.6c0,9.5,0,18.3-1.8,27-4,19.6-14.4,28.8-34.5,29.8-5.3.3-10.7-.1-15.9-1-8.5-1.5-13.1-5.8-14.6-14-.7-3.7-1.2-7.5-1.2-11.4,0-18.1-.3-36.3,2.1-54.3,1.1-7.9,2.1-15.9,7.5-22.3,9-10.8,21.2-11.1,33.3-8.6,11.6,2.4,19,10.4,22.1,21.9,3,11,3.4,22.3,3.1,32.9h0ZM629.2,79.7c-.2-9.7.3-18.3,2-26.8,2.8-14.3,9.9-22.3,26.3-21.6,12,.5,20.9,8.6,22.5,22.2,1.9,16.1,1.2,32.2-.8,48.2-1,8.3-5.9,13.3-14.2,15.1-6.3,1.4-12.5,1.8-18.7.4-9.2-1.9-14.9-9.1-16.1-19.7-.7-6.3-1.3-12.6-1-17.9h0Z'
              />
            </g>
          </g>
        </svg>
      </div>
    </div>
  );
};

export default Loading;
